apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.android.movie"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            versionCode rootProject.ext.versionCode as Integer
            versionName rootProject.ext.versionName as String

            buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org/3/\"")
            buildConfigField("String", "KEY", "\"9306ffedc55b2a2c9cd5de32399d4e4e\"")
            buildConfigField("String", "IMG_URL", "\"https://image.tmdb.org/t/p/w500\"")
        }
    }

    dataBinding {
        enabled true
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:${rootProject.jUnit}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.testImplementation}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espresso}"
    implementation "com.telly:mrvector:${rootProject.mrVector}"

    //Support Libs
    implementation "com.android.support:cardview-v7:${rootProject.supportLibs}"
    implementation "com.android.support:support-v13:${rootProject.buildTools}"
    implementation "com.android.support:multidex:${rootProject.multidex}"
    implementation "com.android.support:appcompat-v7:${rootProject.buildTools}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintLayout}"
    implementation "com.android.support:design:${rootProject.buildTools}"

    //Network
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.loggingInterceptor}"
    implementation "com.squareup.okhttp3:okhttp:${rootProject.okhttp}"
    implementation ("com.squareup.retrofit2:retrofit:${rootProject.retrofit}") {
        exclude module: 'okhttp' // exclude Retrofitâ€™s OkHttp dependency module and define your own module import
    }
    implementation "com.jakewharton.timber:timber:${rootProject.timber}"
    implementation "com.github.bumptech.glide:glide:${rootProject.glide}"

    //Data
    implementation "com.google.code.gson:gson:${rootProject.gson}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.gsonConvertor}"
    implementation "com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:${rootProject.jodatime}"

    //Room Database
    implementation "android.arch.persistence.room:runtime:${rootProject.room}"
    annotationProcessor "android.arch.persistence.room:compiler:${rootProject.room}"

    //Dependency Injection
    implementation "com.google.dagger:dagger:${rootProject.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.dagger}"
}
